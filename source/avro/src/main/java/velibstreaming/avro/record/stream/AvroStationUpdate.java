/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package velibstreaming.avro.record.stream;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class AvroStationUpdate extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -6490627416184249835L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"AvroStationUpdate\",\"namespace\":\"velibstreaming.avro.record.stream\",\"fields\":[{\"name\":\"stationCode\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"stationName\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"stationCapacity\",\"type\":\"int\"},{\"name\":\"coordinates\",\"type\":{\"type\":\"record\",\"name\":\"AvroCoordinates\",\"namespace\":\"velibstreaming.avro.record.source\",\"fields\":[{\"name\":\"latitude\",\"type\":\"double\"},{\"name\":\"longitude\",\"type\":\"double\"}]}},{\"name\":\"mechanicalBikesAtStation\",\"type\":\"int\"},{\"name\":\"electricBikesAtStation\",\"type\":\"int\"},{\"name\":\"mechanicalBikesReturned\",\"type\":\"int\"},{\"name\":\"electricBikesReturned\",\"type\":\"int\"},{\"name\":\"mechanicalBikesRented\",\"type\":\"int\"},{\"name\":\"electricBikesRented\",\"type\":\"int\"},{\"name\":\"availabilityTimestamp\",\"type\":\"long\",\"logicalType\":\"timestamp-millis\"},{\"name\":\"loadTimestamp\",\"type\":\"long\",\"logicalType\":\"timestamp-millis\"},{\"name\":\"isRenting\",\"type\":\"boolean\"},{\"name\":\"isReturning\",\"type\":\"boolean\"},{\"name\":\"isInstalled\",\"type\":\"boolean\"},{\"name\":\"lastMovementTimestamp\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"timestamp-millis\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<AvroStationUpdate> ENCODER =
      new BinaryMessageEncoder<AvroStationUpdate>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<AvroStationUpdate> DECODER =
      new BinaryMessageDecoder<AvroStationUpdate>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<AvroStationUpdate> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<AvroStationUpdate> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<AvroStationUpdate> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<AvroStationUpdate>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this AvroStationUpdate to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a AvroStationUpdate from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a AvroStationUpdate instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static AvroStationUpdate fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.String stationCode;
  @Deprecated public java.lang.String stationName;
  @Deprecated public int stationCapacity;
  @Deprecated public velibstreaming.avro.record.source.AvroCoordinates coordinates;
  @Deprecated public int mechanicalBikesAtStation;
  @Deprecated public int electricBikesAtStation;
  @Deprecated public int mechanicalBikesReturned;
  @Deprecated public int electricBikesReturned;
  @Deprecated public int mechanicalBikesRented;
  @Deprecated public int electricBikesRented;
  @Deprecated public long availabilityTimestamp;
  @Deprecated public long loadTimestamp;
  @Deprecated public boolean isRenting;
  @Deprecated public boolean isReturning;
  @Deprecated public boolean isInstalled;
  @Deprecated public java.lang.Long lastMovementTimestamp;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public AvroStationUpdate() {}

  /**
   * All-args constructor.
   * @param stationCode The new value for stationCode
   * @param stationName The new value for stationName
   * @param stationCapacity The new value for stationCapacity
   * @param coordinates The new value for coordinates
   * @param mechanicalBikesAtStation The new value for mechanicalBikesAtStation
   * @param electricBikesAtStation The new value for electricBikesAtStation
   * @param mechanicalBikesReturned The new value for mechanicalBikesReturned
   * @param electricBikesReturned The new value for electricBikesReturned
   * @param mechanicalBikesRented The new value for mechanicalBikesRented
   * @param electricBikesRented The new value for electricBikesRented
   * @param availabilityTimestamp The new value for availabilityTimestamp
   * @param loadTimestamp The new value for loadTimestamp
   * @param isRenting The new value for isRenting
   * @param isReturning The new value for isReturning
   * @param isInstalled The new value for isInstalled
   * @param lastMovementTimestamp The new value for lastMovementTimestamp
   */
  public AvroStationUpdate(java.lang.String stationCode, java.lang.String stationName, java.lang.Integer stationCapacity, velibstreaming.avro.record.source.AvroCoordinates coordinates, java.lang.Integer mechanicalBikesAtStation, java.lang.Integer electricBikesAtStation, java.lang.Integer mechanicalBikesReturned, java.lang.Integer electricBikesReturned, java.lang.Integer mechanicalBikesRented, java.lang.Integer electricBikesRented, java.lang.Long availabilityTimestamp, java.lang.Long loadTimestamp, java.lang.Boolean isRenting, java.lang.Boolean isReturning, java.lang.Boolean isInstalled, java.lang.Long lastMovementTimestamp) {
    this.stationCode = stationCode;
    this.stationName = stationName;
    this.stationCapacity = stationCapacity;
    this.coordinates = coordinates;
    this.mechanicalBikesAtStation = mechanicalBikesAtStation;
    this.electricBikesAtStation = electricBikesAtStation;
    this.mechanicalBikesReturned = mechanicalBikesReturned;
    this.electricBikesReturned = electricBikesReturned;
    this.mechanicalBikesRented = mechanicalBikesRented;
    this.electricBikesRented = electricBikesRented;
    this.availabilityTimestamp = availabilityTimestamp;
    this.loadTimestamp = loadTimestamp;
    this.isRenting = isRenting;
    this.isReturning = isReturning;
    this.isInstalled = isInstalled;
    this.lastMovementTimestamp = lastMovementTimestamp;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return stationCode;
    case 1: return stationName;
    case 2: return stationCapacity;
    case 3: return coordinates;
    case 4: return mechanicalBikesAtStation;
    case 5: return electricBikesAtStation;
    case 6: return mechanicalBikesReturned;
    case 7: return electricBikesReturned;
    case 8: return mechanicalBikesRented;
    case 9: return electricBikesRented;
    case 10: return availabilityTimestamp;
    case 11: return loadTimestamp;
    case 12: return isRenting;
    case 13: return isReturning;
    case 14: return isInstalled;
    case 15: return lastMovementTimestamp;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: stationCode = value$ != null ? value$.toString() : null; break;
    case 1: stationName = value$ != null ? value$.toString() : null; break;
    case 2: stationCapacity = (java.lang.Integer)value$; break;
    case 3: coordinates = (velibstreaming.avro.record.source.AvroCoordinates)value$; break;
    case 4: mechanicalBikesAtStation = (java.lang.Integer)value$; break;
    case 5: electricBikesAtStation = (java.lang.Integer)value$; break;
    case 6: mechanicalBikesReturned = (java.lang.Integer)value$; break;
    case 7: electricBikesReturned = (java.lang.Integer)value$; break;
    case 8: mechanicalBikesRented = (java.lang.Integer)value$; break;
    case 9: electricBikesRented = (java.lang.Integer)value$; break;
    case 10: availabilityTimestamp = (java.lang.Long)value$; break;
    case 11: loadTimestamp = (java.lang.Long)value$; break;
    case 12: isRenting = (java.lang.Boolean)value$; break;
    case 13: isReturning = (java.lang.Boolean)value$; break;
    case 14: isInstalled = (java.lang.Boolean)value$; break;
    case 15: lastMovementTimestamp = (java.lang.Long)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'stationCode' field.
   * @return The value of the 'stationCode' field.
   */
  public java.lang.String getStationCode() {
    return stationCode;
  }


  /**
   * Sets the value of the 'stationCode' field.
   * @param value the value to set.
   */
  public void setStationCode(java.lang.String value) {
    this.stationCode = value;
  }

  /**
   * Gets the value of the 'stationName' field.
   * @return The value of the 'stationName' field.
   */
  public java.lang.String getStationName() {
    return stationName;
  }


  /**
   * Sets the value of the 'stationName' field.
   * @param value the value to set.
   */
  public void setStationName(java.lang.String value) {
    this.stationName = value;
  }

  /**
   * Gets the value of the 'stationCapacity' field.
   * @return The value of the 'stationCapacity' field.
   */
  public int getStationCapacity() {
    return stationCapacity;
  }


  /**
   * Sets the value of the 'stationCapacity' field.
   * @param value the value to set.
   */
  public void setStationCapacity(int value) {
    this.stationCapacity = value;
  }

  /**
   * Gets the value of the 'coordinates' field.
   * @return The value of the 'coordinates' field.
   */
  public velibstreaming.avro.record.source.AvroCoordinates getCoordinates() {
    return coordinates;
  }


  /**
   * Sets the value of the 'coordinates' field.
   * @param value the value to set.
   */
  public void setCoordinates(velibstreaming.avro.record.source.AvroCoordinates value) {
    this.coordinates = value;
  }

  /**
   * Gets the value of the 'mechanicalBikesAtStation' field.
   * @return The value of the 'mechanicalBikesAtStation' field.
   */
  public int getMechanicalBikesAtStation() {
    return mechanicalBikesAtStation;
  }


  /**
   * Sets the value of the 'mechanicalBikesAtStation' field.
   * @param value the value to set.
   */
  public void setMechanicalBikesAtStation(int value) {
    this.mechanicalBikesAtStation = value;
  }

  /**
   * Gets the value of the 'electricBikesAtStation' field.
   * @return The value of the 'electricBikesAtStation' field.
   */
  public int getElectricBikesAtStation() {
    return electricBikesAtStation;
  }


  /**
   * Sets the value of the 'electricBikesAtStation' field.
   * @param value the value to set.
   */
  public void setElectricBikesAtStation(int value) {
    this.electricBikesAtStation = value;
  }

  /**
   * Gets the value of the 'mechanicalBikesReturned' field.
   * @return The value of the 'mechanicalBikesReturned' field.
   */
  public int getMechanicalBikesReturned() {
    return mechanicalBikesReturned;
  }


  /**
   * Sets the value of the 'mechanicalBikesReturned' field.
   * @param value the value to set.
   */
  public void setMechanicalBikesReturned(int value) {
    this.mechanicalBikesReturned = value;
  }

  /**
   * Gets the value of the 'electricBikesReturned' field.
   * @return The value of the 'electricBikesReturned' field.
   */
  public int getElectricBikesReturned() {
    return electricBikesReturned;
  }


  /**
   * Sets the value of the 'electricBikesReturned' field.
   * @param value the value to set.
   */
  public void setElectricBikesReturned(int value) {
    this.electricBikesReturned = value;
  }

  /**
   * Gets the value of the 'mechanicalBikesRented' field.
   * @return The value of the 'mechanicalBikesRented' field.
   */
  public int getMechanicalBikesRented() {
    return mechanicalBikesRented;
  }


  /**
   * Sets the value of the 'mechanicalBikesRented' field.
   * @param value the value to set.
   */
  public void setMechanicalBikesRented(int value) {
    this.mechanicalBikesRented = value;
  }

  /**
   * Gets the value of the 'electricBikesRented' field.
   * @return The value of the 'electricBikesRented' field.
   */
  public int getElectricBikesRented() {
    return electricBikesRented;
  }


  /**
   * Sets the value of the 'electricBikesRented' field.
   * @param value the value to set.
   */
  public void setElectricBikesRented(int value) {
    this.electricBikesRented = value;
  }

  /**
   * Gets the value of the 'availabilityTimestamp' field.
   * @return The value of the 'availabilityTimestamp' field.
   */
  public long getAvailabilityTimestamp() {
    return availabilityTimestamp;
  }


  /**
   * Sets the value of the 'availabilityTimestamp' field.
   * @param value the value to set.
   */
  public void setAvailabilityTimestamp(long value) {
    this.availabilityTimestamp = value;
  }

  /**
   * Gets the value of the 'loadTimestamp' field.
   * @return The value of the 'loadTimestamp' field.
   */
  public long getLoadTimestamp() {
    return loadTimestamp;
  }


  /**
   * Sets the value of the 'loadTimestamp' field.
   * @param value the value to set.
   */
  public void setLoadTimestamp(long value) {
    this.loadTimestamp = value;
  }

  /**
   * Gets the value of the 'isRenting' field.
   * @return The value of the 'isRenting' field.
   */
  public boolean getIsRenting() {
    return isRenting;
  }


  /**
   * Sets the value of the 'isRenting' field.
   * @param value the value to set.
   */
  public void setIsRenting(boolean value) {
    this.isRenting = value;
  }

  /**
   * Gets the value of the 'isReturning' field.
   * @return The value of the 'isReturning' field.
   */
  public boolean getIsReturning() {
    return isReturning;
  }


  /**
   * Sets the value of the 'isReturning' field.
   * @param value the value to set.
   */
  public void setIsReturning(boolean value) {
    this.isReturning = value;
  }

  /**
   * Gets the value of the 'isInstalled' field.
   * @return The value of the 'isInstalled' field.
   */
  public boolean getIsInstalled() {
    return isInstalled;
  }


  /**
   * Sets the value of the 'isInstalled' field.
   * @param value the value to set.
   */
  public void setIsInstalled(boolean value) {
    this.isInstalled = value;
  }

  /**
   * Gets the value of the 'lastMovementTimestamp' field.
   * @return The value of the 'lastMovementTimestamp' field.
   */
  public java.lang.Long getLastMovementTimestamp() {
    return lastMovementTimestamp;
  }


  /**
   * Sets the value of the 'lastMovementTimestamp' field.
   * @param value the value to set.
   */
  public void setLastMovementTimestamp(java.lang.Long value) {
    this.lastMovementTimestamp = value;
  }

  /**
   * Creates a new AvroStationUpdate RecordBuilder.
   * @return A new AvroStationUpdate RecordBuilder
   */
  public static velibstreaming.avro.record.stream.AvroStationUpdate.Builder newBuilder() {
    return new velibstreaming.avro.record.stream.AvroStationUpdate.Builder();
  }

  /**
   * Creates a new AvroStationUpdate RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new AvroStationUpdate RecordBuilder
   */
  public static velibstreaming.avro.record.stream.AvroStationUpdate.Builder newBuilder(velibstreaming.avro.record.stream.AvroStationUpdate.Builder other) {
    if (other == null) {
      return new velibstreaming.avro.record.stream.AvroStationUpdate.Builder();
    } else {
      return new velibstreaming.avro.record.stream.AvroStationUpdate.Builder(other);
    }
  }

  /**
   * Creates a new AvroStationUpdate RecordBuilder by copying an existing AvroStationUpdate instance.
   * @param other The existing instance to copy.
   * @return A new AvroStationUpdate RecordBuilder
   */
  public static velibstreaming.avro.record.stream.AvroStationUpdate.Builder newBuilder(velibstreaming.avro.record.stream.AvroStationUpdate other) {
    if (other == null) {
      return new velibstreaming.avro.record.stream.AvroStationUpdate.Builder();
    } else {
      return new velibstreaming.avro.record.stream.AvroStationUpdate.Builder(other);
    }
  }

  /**
   * RecordBuilder for AvroStationUpdate instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<AvroStationUpdate>
    implements org.apache.avro.data.RecordBuilder<AvroStationUpdate> {

    private java.lang.String stationCode;
    private java.lang.String stationName;
    private int stationCapacity;
    private velibstreaming.avro.record.source.AvroCoordinates coordinates;
    private velibstreaming.avro.record.source.AvroCoordinates.Builder coordinatesBuilder;
    private int mechanicalBikesAtStation;
    private int electricBikesAtStation;
    private int mechanicalBikesReturned;
    private int electricBikesReturned;
    private int mechanicalBikesRented;
    private int electricBikesRented;
    private long availabilityTimestamp;
    private long loadTimestamp;
    private boolean isRenting;
    private boolean isReturning;
    private boolean isInstalled;
    private java.lang.Long lastMovementTimestamp;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(velibstreaming.avro.record.stream.AvroStationUpdate.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.stationCode)) {
        this.stationCode = data().deepCopy(fields()[0].schema(), other.stationCode);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.stationName)) {
        this.stationName = data().deepCopy(fields()[1].schema(), other.stationName);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.stationCapacity)) {
        this.stationCapacity = data().deepCopy(fields()[2].schema(), other.stationCapacity);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.coordinates)) {
        this.coordinates = data().deepCopy(fields()[3].schema(), other.coordinates);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (other.hasCoordinatesBuilder()) {
        this.coordinatesBuilder = velibstreaming.avro.record.source.AvroCoordinates.newBuilder(other.getCoordinatesBuilder());
      }
      if (isValidValue(fields()[4], other.mechanicalBikesAtStation)) {
        this.mechanicalBikesAtStation = data().deepCopy(fields()[4].schema(), other.mechanicalBikesAtStation);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.electricBikesAtStation)) {
        this.electricBikesAtStation = data().deepCopy(fields()[5].schema(), other.electricBikesAtStation);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.mechanicalBikesReturned)) {
        this.mechanicalBikesReturned = data().deepCopy(fields()[6].schema(), other.mechanicalBikesReturned);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.electricBikesReturned)) {
        this.electricBikesReturned = data().deepCopy(fields()[7].schema(), other.electricBikesReturned);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.mechanicalBikesRented)) {
        this.mechanicalBikesRented = data().deepCopy(fields()[8].schema(), other.mechanicalBikesRented);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.electricBikesRented)) {
        this.electricBikesRented = data().deepCopy(fields()[9].schema(), other.electricBikesRented);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.availabilityTimestamp)) {
        this.availabilityTimestamp = data().deepCopy(fields()[10].schema(), other.availabilityTimestamp);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.loadTimestamp)) {
        this.loadTimestamp = data().deepCopy(fields()[11].schema(), other.loadTimestamp);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (isValidValue(fields()[12], other.isRenting)) {
        this.isRenting = data().deepCopy(fields()[12].schema(), other.isRenting);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
      if (isValidValue(fields()[13], other.isReturning)) {
        this.isReturning = data().deepCopy(fields()[13].schema(), other.isReturning);
        fieldSetFlags()[13] = other.fieldSetFlags()[13];
      }
      if (isValidValue(fields()[14], other.isInstalled)) {
        this.isInstalled = data().deepCopy(fields()[14].schema(), other.isInstalled);
        fieldSetFlags()[14] = other.fieldSetFlags()[14];
      }
      if (isValidValue(fields()[15], other.lastMovementTimestamp)) {
        this.lastMovementTimestamp = data().deepCopy(fields()[15].schema(), other.lastMovementTimestamp);
        fieldSetFlags()[15] = other.fieldSetFlags()[15];
      }
    }

    /**
     * Creates a Builder by copying an existing AvroStationUpdate instance
     * @param other The existing instance to copy.
     */
    private Builder(velibstreaming.avro.record.stream.AvroStationUpdate other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.stationCode)) {
        this.stationCode = data().deepCopy(fields()[0].schema(), other.stationCode);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.stationName)) {
        this.stationName = data().deepCopy(fields()[1].schema(), other.stationName);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.stationCapacity)) {
        this.stationCapacity = data().deepCopy(fields()[2].schema(), other.stationCapacity);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.coordinates)) {
        this.coordinates = data().deepCopy(fields()[3].schema(), other.coordinates);
        fieldSetFlags()[3] = true;
      }
      this.coordinatesBuilder = null;
      if (isValidValue(fields()[4], other.mechanicalBikesAtStation)) {
        this.mechanicalBikesAtStation = data().deepCopy(fields()[4].schema(), other.mechanicalBikesAtStation);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.electricBikesAtStation)) {
        this.electricBikesAtStation = data().deepCopy(fields()[5].schema(), other.electricBikesAtStation);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.mechanicalBikesReturned)) {
        this.mechanicalBikesReturned = data().deepCopy(fields()[6].schema(), other.mechanicalBikesReturned);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.electricBikesReturned)) {
        this.electricBikesReturned = data().deepCopy(fields()[7].schema(), other.electricBikesReturned);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.mechanicalBikesRented)) {
        this.mechanicalBikesRented = data().deepCopy(fields()[8].schema(), other.mechanicalBikesRented);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.electricBikesRented)) {
        this.electricBikesRented = data().deepCopy(fields()[9].schema(), other.electricBikesRented);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.availabilityTimestamp)) {
        this.availabilityTimestamp = data().deepCopy(fields()[10].schema(), other.availabilityTimestamp);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.loadTimestamp)) {
        this.loadTimestamp = data().deepCopy(fields()[11].schema(), other.loadTimestamp);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.isRenting)) {
        this.isRenting = data().deepCopy(fields()[12].schema(), other.isRenting);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.isReturning)) {
        this.isReturning = data().deepCopy(fields()[13].schema(), other.isReturning);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.isInstalled)) {
        this.isInstalled = data().deepCopy(fields()[14].schema(), other.isInstalled);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.lastMovementTimestamp)) {
        this.lastMovementTimestamp = data().deepCopy(fields()[15].schema(), other.lastMovementTimestamp);
        fieldSetFlags()[15] = true;
      }
    }

    /**
      * Gets the value of the 'stationCode' field.
      * @return The value.
      */
    public java.lang.String getStationCode() {
      return stationCode;
    }


    /**
      * Sets the value of the 'stationCode' field.
      * @param value The value of 'stationCode'.
      * @return This builder.
      */
    public velibstreaming.avro.record.stream.AvroStationUpdate.Builder setStationCode(java.lang.String value) {
      validate(fields()[0], value);
      this.stationCode = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'stationCode' field has been set.
      * @return True if the 'stationCode' field has been set, false otherwise.
      */
    public boolean hasStationCode() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'stationCode' field.
      * @return This builder.
      */
    public velibstreaming.avro.record.stream.AvroStationUpdate.Builder clearStationCode() {
      stationCode = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'stationName' field.
      * @return The value.
      */
    public java.lang.String getStationName() {
      return stationName;
    }


    /**
      * Sets the value of the 'stationName' field.
      * @param value The value of 'stationName'.
      * @return This builder.
      */
    public velibstreaming.avro.record.stream.AvroStationUpdate.Builder setStationName(java.lang.String value) {
      validate(fields()[1], value);
      this.stationName = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'stationName' field has been set.
      * @return True if the 'stationName' field has been set, false otherwise.
      */
    public boolean hasStationName() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'stationName' field.
      * @return This builder.
      */
    public velibstreaming.avro.record.stream.AvroStationUpdate.Builder clearStationName() {
      stationName = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'stationCapacity' field.
      * @return The value.
      */
    public int getStationCapacity() {
      return stationCapacity;
    }


    /**
      * Sets the value of the 'stationCapacity' field.
      * @param value The value of 'stationCapacity'.
      * @return This builder.
      */
    public velibstreaming.avro.record.stream.AvroStationUpdate.Builder setStationCapacity(int value) {
      validate(fields()[2], value);
      this.stationCapacity = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'stationCapacity' field has been set.
      * @return True if the 'stationCapacity' field has been set, false otherwise.
      */
    public boolean hasStationCapacity() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'stationCapacity' field.
      * @return This builder.
      */
    public velibstreaming.avro.record.stream.AvroStationUpdate.Builder clearStationCapacity() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'coordinates' field.
      * @return The value.
      */
    public velibstreaming.avro.record.source.AvroCoordinates getCoordinates() {
      return coordinates;
    }


    /**
      * Sets the value of the 'coordinates' field.
      * @param value The value of 'coordinates'.
      * @return This builder.
      */
    public velibstreaming.avro.record.stream.AvroStationUpdate.Builder setCoordinates(velibstreaming.avro.record.source.AvroCoordinates value) {
      validate(fields()[3], value);
      this.coordinatesBuilder = null;
      this.coordinates = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'coordinates' field has been set.
      * @return True if the 'coordinates' field has been set, false otherwise.
      */
    public boolean hasCoordinates() {
      return fieldSetFlags()[3];
    }

    /**
     * Gets the Builder instance for the 'coordinates' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public velibstreaming.avro.record.source.AvroCoordinates.Builder getCoordinatesBuilder() {
      if (coordinatesBuilder == null) {
        if (hasCoordinates()) {
          setCoordinatesBuilder(velibstreaming.avro.record.source.AvroCoordinates.newBuilder(coordinates));
        } else {
          setCoordinatesBuilder(velibstreaming.avro.record.source.AvroCoordinates.newBuilder());
        }
      }
      return coordinatesBuilder;
    }

    /**
     * Sets the Builder instance for the 'coordinates' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public velibstreaming.avro.record.stream.AvroStationUpdate.Builder setCoordinatesBuilder(velibstreaming.avro.record.source.AvroCoordinates.Builder value) {
      clearCoordinates();
      coordinatesBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'coordinates' field has an active Builder instance
     * @return True if the 'coordinates' field has an active Builder instance
     */
    public boolean hasCoordinatesBuilder() {
      return coordinatesBuilder != null;
    }

    /**
      * Clears the value of the 'coordinates' field.
      * @return This builder.
      */
    public velibstreaming.avro.record.stream.AvroStationUpdate.Builder clearCoordinates() {
      coordinates = null;
      coordinatesBuilder = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'mechanicalBikesAtStation' field.
      * @return The value.
      */
    public int getMechanicalBikesAtStation() {
      return mechanicalBikesAtStation;
    }


    /**
      * Sets the value of the 'mechanicalBikesAtStation' field.
      * @param value The value of 'mechanicalBikesAtStation'.
      * @return This builder.
      */
    public velibstreaming.avro.record.stream.AvroStationUpdate.Builder setMechanicalBikesAtStation(int value) {
      validate(fields()[4], value);
      this.mechanicalBikesAtStation = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'mechanicalBikesAtStation' field has been set.
      * @return True if the 'mechanicalBikesAtStation' field has been set, false otherwise.
      */
    public boolean hasMechanicalBikesAtStation() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'mechanicalBikesAtStation' field.
      * @return This builder.
      */
    public velibstreaming.avro.record.stream.AvroStationUpdate.Builder clearMechanicalBikesAtStation() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'electricBikesAtStation' field.
      * @return The value.
      */
    public int getElectricBikesAtStation() {
      return electricBikesAtStation;
    }


    /**
      * Sets the value of the 'electricBikesAtStation' field.
      * @param value The value of 'electricBikesAtStation'.
      * @return This builder.
      */
    public velibstreaming.avro.record.stream.AvroStationUpdate.Builder setElectricBikesAtStation(int value) {
      validate(fields()[5], value);
      this.electricBikesAtStation = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'electricBikesAtStation' field has been set.
      * @return True if the 'electricBikesAtStation' field has been set, false otherwise.
      */
    public boolean hasElectricBikesAtStation() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'electricBikesAtStation' field.
      * @return This builder.
      */
    public velibstreaming.avro.record.stream.AvroStationUpdate.Builder clearElectricBikesAtStation() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'mechanicalBikesReturned' field.
      * @return The value.
      */
    public int getMechanicalBikesReturned() {
      return mechanicalBikesReturned;
    }


    /**
      * Sets the value of the 'mechanicalBikesReturned' field.
      * @param value The value of 'mechanicalBikesReturned'.
      * @return This builder.
      */
    public velibstreaming.avro.record.stream.AvroStationUpdate.Builder setMechanicalBikesReturned(int value) {
      validate(fields()[6], value);
      this.mechanicalBikesReturned = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'mechanicalBikesReturned' field has been set.
      * @return True if the 'mechanicalBikesReturned' field has been set, false otherwise.
      */
    public boolean hasMechanicalBikesReturned() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'mechanicalBikesReturned' field.
      * @return This builder.
      */
    public velibstreaming.avro.record.stream.AvroStationUpdate.Builder clearMechanicalBikesReturned() {
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'electricBikesReturned' field.
      * @return The value.
      */
    public int getElectricBikesReturned() {
      return electricBikesReturned;
    }


    /**
      * Sets the value of the 'electricBikesReturned' field.
      * @param value The value of 'electricBikesReturned'.
      * @return This builder.
      */
    public velibstreaming.avro.record.stream.AvroStationUpdate.Builder setElectricBikesReturned(int value) {
      validate(fields()[7], value);
      this.electricBikesReturned = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'electricBikesReturned' field has been set.
      * @return True if the 'electricBikesReturned' field has been set, false otherwise.
      */
    public boolean hasElectricBikesReturned() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'electricBikesReturned' field.
      * @return This builder.
      */
    public velibstreaming.avro.record.stream.AvroStationUpdate.Builder clearElectricBikesReturned() {
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'mechanicalBikesRented' field.
      * @return The value.
      */
    public int getMechanicalBikesRented() {
      return mechanicalBikesRented;
    }


    /**
      * Sets the value of the 'mechanicalBikesRented' field.
      * @param value The value of 'mechanicalBikesRented'.
      * @return This builder.
      */
    public velibstreaming.avro.record.stream.AvroStationUpdate.Builder setMechanicalBikesRented(int value) {
      validate(fields()[8], value);
      this.mechanicalBikesRented = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'mechanicalBikesRented' field has been set.
      * @return True if the 'mechanicalBikesRented' field has been set, false otherwise.
      */
    public boolean hasMechanicalBikesRented() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'mechanicalBikesRented' field.
      * @return This builder.
      */
    public velibstreaming.avro.record.stream.AvroStationUpdate.Builder clearMechanicalBikesRented() {
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'electricBikesRented' field.
      * @return The value.
      */
    public int getElectricBikesRented() {
      return electricBikesRented;
    }


    /**
      * Sets the value of the 'electricBikesRented' field.
      * @param value The value of 'electricBikesRented'.
      * @return This builder.
      */
    public velibstreaming.avro.record.stream.AvroStationUpdate.Builder setElectricBikesRented(int value) {
      validate(fields()[9], value);
      this.electricBikesRented = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'electricBikesRented' field has been set.
      * @return True if the 'electricBikesRented' field has been set, false otherwise.
      */
    public boolean hasElectricBikesRented() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'electricBikesRented' field.
      * @return This builder.
      */
    public velibstreaming.avro.record.stream.AvroStationUpdate.Builder clearElectricBikesRented() {
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'availabilityTimestamp' field.
      * @return The value.
      */
    public long getAvailabilityTimestamp() {
      return availabilityTimestamp;
    }


    /**
      * Sets the value of the 'availabilityTimestamp' field.
      * @param value The value of 'availabilityTimestamp'.
      * @return This builder.
      */
    public velibstreaming.avro.record.stream.AvroStationUpdate.Builder setAvailabilityTimestamp(long value) {
      validate(fields()[10], value);
      this.availabilityTimestamp = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'availabilityTimestamp' field has been set.
      * @return True if the 'availabilityTimestamp' field has been set, false otherwise.
      */
    public boolean hasAvailabilityTimestamp() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'availabilityTimestamp' field.
      * @return This builder.
      */
    public velibstreaming.avro.record.stream.AvroStationUpdate.Builder clearAvailabilityTimestamp() {
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'loadTimestamp' field.
      * @return The value.
      */
    public long getLoadTimestamp() {
      return loadTimestamp;
    }


    /**
      * Sets the value of the 'loadTimestamp' field.
      * @param value The value of 'loadTimestamp'.
      * @return This builder.
      */
    public velibstreaming.avro.record.stream.AvroStationUpdate.Builder setLoadTimestamp(long value) {
      validate(fields()[11], value);
      this.loadTimestamp = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'loadTimestamp' field has been set.
      * @return True if the 'loadTimestamp' field has been set, false otherwise.
      */
    public boolean hasLoadTimestamp() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'loadTimestamp' field.
      * @return This builder.
      */
    public velibstreaming.avro.record.stream.AvroStationUpdate.Builder clearLoadTimestamp() {
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'isRenting' field.
      * @return The value.
      */
    public boolean getIsRenting() {
      return isRenting;
    }


    /**
      * Sets the value of the 'isRenting' field.
      * @param value The value of 'isRenting'.
      * @return This builder.
      */
    public velibstreaming.avro.record.stream.AvroStationUpdate.Builder setIsRenting(boolean value) {
      validate(fields()[12], value);
      this.isRenting = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'isRenting' field has been set.
      * @return True if the 'isRenting' field has been set, false otherwise.
      */
    public boolean hasIsRenting() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'isRenting' field.
      * @return This builder.
      */
    public velibstreaming.avro.record.stream.AvroStationUpdate.Builder clearIsRenting() {
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'isReturning' field.
      * @return The value.
      */
    public boolean getIsReturning() {
      return isReturning;
    }


    /**
      * Sets the value of the 'isReturning' field.
      * @param value The value of 'isReturning'.
      * @return This builder.
      */
    public velibstreaming.avro.record.stream.AvroStationUpdate.Builder setIsReturning(boolean value) {
      validate(fields()[13], value);
      this.isReturning = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'isReturning' field has been set.
      * @return True if the 'isReturning' field has been set, false otherwise.
      */
    public boolean hasIsReturning() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'isReturning' field.
      * @return This builder.
      */
    public velibstreaming.avro.record.stream.AvroStationUpdate.Builder clearIsReturning() {
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'isInstalled' field.
      * @return The value.
      */
    public boolean getIsInstalled() {
      return isInstalled;
    }


    /**
      * Sets the value of the 'isInstalled' field.
      * @param value The value of 'isInstalled'.
      * @return This builder.
      */
    public velibstreaming.avro.record.stream.AvroStationUpdate.Builder setIsInstalled(boolean value) {
      validate(fields()[14], value);
      this.isInstalled = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'isInstalled' field has been set.
      * @return True if the 'isInstalled' field has been set, false otherwise.
      */
    public boolean hasIsInstalled() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'isInstalled' field.
      * @return This builder.
      */
    public velibstreaming.avro.record.stream.AvroStationUpdate.Builder clearIsInstalled() {
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'lastMovementTimestamp' field.
      * @return The value.
      */
    public java.lang.Long getLastMovementTimestamp() {
      return lastMovementTimestamp;
    }


    /**
      * Sets the value of the 'lastMovementTimestamp' field.
      * @param value The value of 'lastMovementTimestamp'.
      * @return This builder.
      */
    public velibstreaming.avro.record.stream.AvroStationUpdate.Builder setLastMovementTimestamp(java.lang.Long value) {
      validate(fields()[15], value);
      this.lastMovementTimestamp = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'lastMovementTimestamp' field has been set.
      * @return True if the 'lastMovementTimestamp' field has been set, false otherwise.
      */
    public boolean hasLastMovementTimestamp() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'lastMovementTimestamp' field.
      * @return This builder.
      */
    public velibstreaming.avro.record.stream.AvroStationUpdate.Builder clearLastMovementTimestamp() {
      lastMovementTimestamp = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public AvroStationUpdate build() {
      try {
        AvroStationUpdate record = new AvroStationUpdate();
        record.stationCode = fieldSetFlags()[0] ? this.stationCode : (java.lang.String) defaultValue(fields()[0]);
        record.stationName = fieldSetFlags()[1] ? this.stationName : (java.lang.String) defaultValue(fields()[1]);
        record.stationCapacity = fieldSetFlags()[2] ? this.stationCapacity : (java.lang.Integer) defaultValue(fields()[2]);
        if (coordinatesBuilder != null) {
          try {
            record.coordinates = this.coordinatesBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("coordinates"));
            throw e;
          }
        } else {
          record.coordinates = fieldSetFlags()[3] ? this.coordinates : (velibstreaming.avro.record.source.AvroCoordinates) defaultValue(fields()[3]);
        }
        record.mechanicalBikesAtStation = fieldSetFlags()[4] ? this.mechanicalBikesAtStation : (java.lang.Integer) defaultValue(fields()[4]);
        record.electricBikesAtStation = fieldSetFlags()[5] ? this.electricBikesAtStation : (java.lang.Integer) defaultValue(fields()[5]);
        record.mechanicalBikesReturned = fieldSetFlags()[6] ? this.mechanicalBikesReturned : (java.lang.Integer) defaultValue(fields()[6]);
        record.electricBikesReturned = fieldSetFlags()[7] ? this.electricBikesReturned : (java.lang.Integer) defaultValue(fields()[7]);
        record.mechanicalBikesRented = fieldSetFlags()[8] ? this.mechanicalBikesRented : (java.lang.Integer) defaultValue(fields()[8]);
        record.electricBikesRented = fieldSetFlags()[9] ? this.electricBikesRented : (java.lang.Integer) defaultValue(fields()[9]);
        record.availabilityTimestamp = fieldSetFlags()[10] ? this.availabilityTimestamp : (java.lang.Long) defaultValue(fields()[10]);
        record.loadTimestamp = fieldSetFlags()[11] ? this.loadTimestamp : (java.lang.Long) defaultValue(fields()[11]);
        record.isRenting = fieldSetFlags()[12] ? this.isRenting : (java.lang.Boolean) defaultValue(fields()[12]);
        record.isReturning = fieldSetFlags()[13] ? this.isReturning : (java.lang.Boolean) defaultValue(fields()[13]);
        record.isInstalled = fieldSetFlags()[14] ? this.isInstalled : (java.lang.Boolean) defaultValue(fields()[14]);
        record.lastMovementTimestamp = fieldSetFlags()[15] ? this.lastMovementTimestamp : (java.lang.Long) defaultValue(fields()[15]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<AvroStationUpdate>
    WRITER$ = (org.apache.avro.io.DatumWriter<AvroStationUpdate>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<AvroStationUpdate>
    READER$ = (org.apache.avro.io.DatumReader<AvroStationUpdate>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.stationCode);

    out.writeString(this.stationName);

    out.writeInt(this.stationCapacity);

    this.coordinates.customEncode(out);

    out.writeInt(this.mechanicalBikesAtStation);

    out.writeInt(this.electricBikesAtStation);

    out.writeInt(this.mechanicalBikesReturned);

    out.writeInt(this.electricBikesReturned);

    out.writeInt(this.mechanicalBikesRented);

    out.writeInt(this.electricBikesRented);

    out.writeLong(this.availabilityTimestamp);

    out.writeLong(this.loadTimestamp);

    out.writeBoolean(this.isRenting);

    out.writeBoolean(this.isReturning);

    out.writeBoolean(this.isInstalled);

    if (this.lastMovementTimestamp == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeLong(this.lastMovementTimestamp);
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.stationCode = in.readString();

      this.stationName = in.readString();

      this.stationCapacity = in.readInt();

      if (this.coordinates == null) {
        this.coordinates = new velibstreaming.avro.record.source.AvroCoordinates();
      }
      this.coordinates.customDecode(in);

      this.mechanicalBikesAtStation = in.readInt();

      this.electricBikesAtStation = in.readInt();

      this.mechanicalBikesReturned = in.readInt();

      this.electricBikesReturned = in.readInt();

      this.mechanicalBikesRented = in.readInt();

      this.electricBikesRented = in.readInt();

      this.availabilityTimestamp = in.readLong();

      this.loadTimestamp = in.readLong();

      this.isRenting = in.readBoolean();

      this.isReturning = in.readBoolean();

      this.isInstalled = in.readBoolean();

      if (in.readIndex() != 1) {
        in.readNull();
        this.lastMovementTimestamp = null;
      } else {
        this.lastMovementTimestamp = in.readLong();
      }

    } else {
      for (int i = 0; i < 16; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.stationCode = in.readString();
          break;

        case 1:
          this.stationName = in.readString();
          break;

        case 2:
          this.stationCapacity = in.readInt();
          break;

        case 3:
          if (this.coordinates == null) {
            this.coordinates = new velibstreaming.avro.record.source.AvroCoordinates();
          }
          this.coordinates.customDecode(in);
          break;

        case 4:
          this.mechanicalBikesAtStation = in.readInt();
          break;

        case 5:
          this.electricBikesAtStation = in.readInt();
          break;

        case 6:
          this.mechanicalBikesReturned = in.readInt();
          break;

        case 7:
          this.electricBikesReturned = in.readInt();
          break;

        case 8:
          this.mechanicalBikesRented = in.readInt();
          break;

        case 9:
          this.electricBikesRented = in.readInt();
          break;

        case 10:
          this.availabilityTimestamp = in.readLong();
          break;

        case 11:
          this.loadTimestamp = in.readLong();
          break;

        case 12:
          this.isRenting = in.readBoolean();
          break;

        case 13:
          this.isReturning = in.readBoolean();
          break;

        case 14:
          this.isInstalled = in.readBoolean();
          break;

        case 15:
          if (in.readIndex() != 1) {
            in.readNull();
            this.lastMovementTimestamp = null;
          } else {
            this.lastMovementTimestamp = in.readLong();
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










