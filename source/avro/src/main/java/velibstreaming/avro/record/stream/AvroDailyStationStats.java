/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package velibstreaming.avro.record.stream;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class AvroDailyStationStats extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -4594696838111722427L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"AvroDailyStationStats\",\"namespace\":\"velibstreaming.avro.record.stream\",\"fields\":[{\"name\":\"hourlyStats\",\"type\":{\"type\":\"map\",\"values\":{\"type\":\"record\",\"name\":\"AvroStationStats\",\"fields\":[{\"name\":\"numberOfMechanicalBikesReturned\",\"type\":\"int\"},{\"name\":\"numberOfElectricBikesReturned\",\"type\":\"int\"},{\"name\":\"numberOfMechanicalBikesRented\",\"type\":\"int\"},{\"name\":\"numberOfElectricBikesRented\",\"type\":\"int\"},{\"name\":\"lastNumberOfMechanicalBikes\",\"type\":\"int\"},{\"name\":\"lastNumberOfElectricBikes\",\"type\":\"int\"},{\"name\":\"lastLoadTimestamp\",\"type\":\"long\",\"logicalType\":\"local-timestamp-millis\"},{\"name\":\"periodStart\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"local-timestamp-millis\"},{\"name\":\"periodEnd\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"local-timestamp-millis\"}]},\"avro.java.string\":\"String\"}},{\"name\":\"dailyStats\",\"type\":\"AvroStationStats\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<AvroDailyStationStats> ENCODER =
      new BinaryMessageEncoder<AvroDailyStationStats>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<AvroDailyStationStats> DECODER =
      new BinaryMessageDecoder<AvroDailyStationStats>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<AvroDailyStationStats> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<AvroDailyStationStats> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<AvroDailyStationStats> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<AvroDailyStationStats>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this AvroDailyStationStats to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a AvroDailyStationStats from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a AvroDailyStationStats instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static AvroDailyStationStats fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.util.Map<java.lang.String,velibstreaming.avro.record.stream.AvroStationStats> hourlyStats;
  @Deprecated public velibstreaming.avro.record.stream.AvroStationStats dailyStats;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public AvroDailyStationStats() {}

  /**
   * All-args constructor.
   * @param hourlyStats The new value for hourlyStats
   * @param dailyStats The new value for dailyStats
   */
  public AvroDailyStationStats(java.util.Map<java.lang.String,velibstreaming.avro.record.stream.AvroStationStats> hourlyStats, velibstreaming.avro.record.stream.AvroStationStats dailyStats) {
    this.hourlyStats = hourlyStats;
    this.dailyStats = dailyStats;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return hourlyStats;
    case 1: return dailyStats;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: hourlyStats = (java.util.Map<java.lang.String,velibstreaming.avro.record.stream.AvroStationStats>)value$; break;
    case 1: dailyStats = (velibstreaming.avro.record.stream.AvroStationStats)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'hourlyStats' field.
   * @return The value of the 'hourlyStats' field.
   */
  public java.util.Map<java.lang.String,velibstreaming.avro.record.stream.AvroStationStats> getHourlyStats() {
    return hourlyStats;
  }


  /**
   * Sets the value of the 'hourlyStats' field.
   * @param value the value to set.
   */
  public void setHourlyStats(java.util.Map<java.lang.String,velibstreaming.avro.record.stream.AvroStationStats> value) {
    this.hourlyStats = value;
  }

  /**
   * Gets the value of the 'dailyStats' field.
   * @return The value of the 'dailyStats' field.
   */
  public velibstreaming.avro.record.stream.AvroStationStats getDailyStats() {
    return dailyStats;
  }


  /**
   * Sets the value of the 'dailyStats' field.
   * @param value the value to set.
   */
  public void setDailyStats(velibstreaming.avro.record.stream.AvroStationStats value) {
    this.dailyStats = value;
  }

  /**
   * Creates a new AvroDailyStationStats RecordBuilder.
   * @return A new AvroDailyStationStats RecordBuilder
   */
  public static velibstreaming.avro.record.stream.AvroDailyStationStats.Builder newBuilder() {
    return new velibstreaming.avro.record.stream.AvroDailyStationStats.Builder();
  }

  /**
   * Creates a new AvroDailyStationStats RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new AvroDailyStationStats RecordBuilder
   */
  public static velibstreaming.avro.record.stream.AvroDailyStationStats.Builder newBuilder(velibstreaming.avro.record.stream.AvroDailyStationStats.Builder other) {
    if (other == null) {
      return new velibstreaming.avro.record.stream.AvroDailyStationStats.Builder();
    } else {
      return new velibstreaming.avro.record.stream.AvroDailyStationStats.Builder(other);
    }
  }

  /**
   * Creates a new AvroDailyStationStats RecordBuilder by copying an existing AvroDailyStationStats instance.
   * @param other The existing instance to copy.
   * @return A new AvroDailyStationStats RecordBuilder
   */
  public static velibstreaming.avro.record.stream.AvroDailyStationStats.Builder newBuilder(velibstreaming.avro.record.stream.AvroDailyStationStats other) {
    if (other == null) {
      return new velibstreaming.avro.record.stream.AvroDailyStationStats.Builder();
    } else {
      return new velibstreaming.avro.record.stream.AvroDailyStationStats.Builder(other);
    }
  }

  /**
   * RecordBuilder for AvroDailyStationStats instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<AvroDailyStationStats>
    implements org.apache.avro.data.RecordBuilder<AvroDailyStationStats> {

    private java.util.Map<java.lang.String,velibstreaming.avro.record.stream.AvroStationStats> hourlyStats;
    private velibstreaming.avro.record.stream.AvroStationStats dailyStats;
    private velibstreaming.avro.record.stream.AvroStationStats.Builder dailyStatsBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(velibstreaming.avro.record.stream.AvroDailyStationStats.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.hourlyStats)) {
        this.hourlyStats = data().deepCopy(fields()[0].schema(), other.hourlyStats);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.dailyStats)) {
        this.dailyStats = data().deepCopy(fields()[1].schema(), other.dailyStats);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (other.hasDailyStatsBuilder()) {
        this.dailyStatsBuilder = velibstreaming.avro.record.stream.AvroStationStats.newBuilder(other.getDailyStatsBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing AvroDailyStationStats instance
     * @param other The existing instance to copy.
     */
    private Builder(velibstreaming.avro.record.stream.AvroDailyStationStats other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.hourlyStats)) {
        this.hourlyStats = data().deepCopy(fields()[0].schema(), other.hourlyStats);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.dailyStats)) {
        this.dailyStats = data().deepCopy(fields()[1].schema(), other.dailyStats);
        fieldSetFlags()[1] = true;
      }
      this.dailyStatsBuilder = null;
    }

    /**
      * Gets the value of the 'hourlyStats' field.
      * @return The value.
      */
    public java.util.Map<java.lang.String,velibstreaming.avro.record.stream.AvroStationStats> getHourlyStats() {
      return hourlyStats;
    }


    /**
      * Sets the value of the 'hourlyStats' field.
      * @param value The value of 'hourlyStats'.
      * @return This builder.
      */
    public velibstreaming.avro.record.stream.AvroDailyStationStats.Builder setHourlyStats(java.util.Map<java.lang.String,velibstreaming.avro.record.stream.AvroStationStats> value) {
      validate(fields()[0], value);
      this.hourlyStats = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'hourlyStats' field has been set.
      * @return True if the 'hourlyStats' field has been set, false otherwise.
      */
    public boolean hasHourlyStats() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'hourlyStats' field.
      * @return This builder.
      */
    public velibstreaming.avro.record.stream.AvroDailyStationStats.Builder clearHourlyStats() {
      hourlyStats = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'dailyStats' field.
      * @return The value.
      */
    public velibstreaming.avro.record.stream.AvroStationStats getDailyStats() {
      return dailyStats;
    }


    /**
      * Sets the value of the 'dailyStats' field.
      * @param value The value of 'dailyStats'.
      * @return This builder.
      */
    public velibstreaming.avro.record.stream.AvroDailyStationStats.Builder setDailyStats(velibstreaming.avro.record.stream.AvroStationStats value) {
      validate(fields()[1], value);
      this.dailyStatsBuilder = null;
      this.dailyStats = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'dailyStats' field has been set.
      * @return True if the 'dailyStats' field has been set, false otherwise.
      */
    public boolean hasDailyStats() {
      return fieldSetFlags()[1];
    }

    /**
     * Gets the Builder instance for the 'dailyStats' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public velibstreaming.avro.record.stream.AvroStationStats.Builder getDailyStatsBuilder() {
      if (dailyStatsBuilder == null) {
        if (hasDailyStats()) {
          setDailyStatsBuilder(velibstreaming.avro.record.stream.AvroStationStats.newBuilder(dailyStats));
        } else {
          setDailyStatsBuilder(velibstreaming.avro.record.stream.AvroStationStats.newBuilder());
        }
      }
      return dailyStatsBuilder;
    }

    /**
     * Sets the Builder instance for the 'dailyStats' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public velibstreaming.avro.record.stream.AvroDailyStationStats.Builder setDailyStatsBuilder(velibstreaming.avro.record.stream.AvroStationStats.Builder value) {
      clearDailyStats();
      dailyStatsBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'dailyStats' field has an active Builder instance
     * @return True if the 'dailyStats' field has an active Builder instance
     */
    public boolean hasDailyStatsBuilder() {
      return dailyStatsBuilder != null;
    }

    /**
      * Clears the value of the 'dailyStats' field.
      * @return This builder.
      */
    public velibstreaming.avro.record.stream.AvroDailyStationStats.Builder clearDailyStats() {
      dailyStats = null;
      dailyStatsBuilder = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public AvroDailyStationStats build() {
      try {
        AvroDailyStationStats record = new AvroDailyStationStats();
        record.hourlyStats = fieldSetFlags()[0] ? this.hourlyStats : (java.util.Map<java.lang.String,velibstreaming.avro.record.stream.AvroStationStats>) defaultValue(fields()[0]);
        if (dailyStatsBuilder != null) {
          try {
            record.dailyStats = this.dailyStatsBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("dailyStats"));
            throw e;
          }
        } else {
          record.dailyStats = fieldSetFlags()[1] ? this.dailyStats : (velibstreaming.avro.record.stream.AvroStationStats) defaultValue(fields()[1]);
        }
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<AvroDailyStationStats>
    WRITER$ = (org.apache.avro.io.DatumWriter<AvroDailyStationStats>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<AvroDailyStationStats>
    READER$ = (org.apache.avro.io.DatumReader<AvroDailyStationStats>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    long size0 = this.hourlyStats.size();
    out.writeMapStart();
    out.setItemCount(size0);
    long actualSize0 = 0;
    for (java.util.Map.Entry<java.lang.String, velibstreaming.avro.record.stream.AvroStationStats> e0: this.hourlyStats.entrySet()) {
      actualSize0++;
      out.startItem();
      out.writeString(e0.getKey());
      velibstreaming.avro.record.stream.AvroStationStats v0 = e0.getValue();
      v0.customEncode(out);
    }
    out.writeMapEnd();
    if (actualSize0 != size0)
      throw new java.util.ConcurrentModificationException("Map-size written was " + size0 + ", but element count was " + actualSize0 + ".");

    this.dailyStats.customEncode(out);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      long size0 = in.readMapStart();
      java.util.Map<java.lang.String,velibstreaming.avro.record.stream.AvroStationStats> m0 = this.hourlyStats; // Need fresh name due to limitation of macro system
      if (m0 == null) {
        m0 = new java.util.HashMap<java.lang.String,velibstreaming.avro.record.stream.AvroStationStats>((int)size0);
        this.hourlyStats = m0;
      } else m0.clear();
      for ( ; 0 < size0; size0 = in.mapNext()) {
        for ( ; size0 != 0; size0--) {
          java.lang.String k0 = null;
          k0 = in.readString();
          velibstreaming.avro.record.stream.AvroStationStats v0 = null;
          if (v0 == null) {
            v0 = new velibstreaming.avro.record.stream.AvroStationStats();
          }
          v0.customDecode(in);
          m0.put(k0, v0);
        }
      }

      if (this.dailyStats == null) {
        this.dailyStats = new velibstreaming.avro.record.stream.AvroStationStats();
      }
      this.dailyStats.customDecode(in);

    } else {
      for (int i = 0; i < 2; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          long size0 = in.readMapStart();
          java.util.Map<java.lang.String,velibstreaming.avro.record.stream.AvroStationStats> m0 = this.hourlyStats; // Need fresh name due to limitation of macro system
          if (m0 == null) {
            m0 = new java.util.HashMap<java.lang.String,velibstreaming.avro.record.stream.AvroStationStats>((int)size0);
            this.hourlyStats = m0;
          } else m0.clear();
          for ( ; 0 < size0; size0 = in.mapNext()) {
            for ( ; size0 != 0; size0--) {
              java.lang.String k0 = null;
              k0 = in.readString();
              velibstreaming.avro.record.stream.AvroStationStats v0 = null;
              if (v0 == null) {
                v0 = new velibstreaming.avro.record.stream.AvroStationStats();
              }
              v0.customDecode(in);
              m0.put(k0, v0);
            }
          }
          break;

        case 1:
          if (this.dailyStats == null) {
            this.dailyStats = new velibstreaming.avro.record.stream.AvroStationStats();
          }
          this.dailyStats.customDecode(in);
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










