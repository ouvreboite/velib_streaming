@startuml
title
<b>High level topology</b>
(Kafka Stream)
end title


frame "Station status topology"{
   rectangle stationAvailabilityClient <<producer>>
   rectangle stationAvailabilities <<topic>>
   rectangle stationUpdates <<topic>>
   rectangle hourlyStationStats<<topic>>
   rectangle stationStatus <<topic>>
   rectangle bikesLocked <<topic>>
   database station_hourly_statistics <<database>>
}

stationAvailabilityClient --> stationAvailabilities 
stationAvailabilities --> stationUpdates : deduplicated
stationUpdates --> hourlyStationStats : windowed
hourlyStationStats --> bikesLocked
hourlyStationStats -> station_hourly_statistics
stationUpdates --> stationStatus
station_hourly_statistics ..> stationStatus

frame "Nearby traffic topology"{
   rectangle bikeCountsClient <<producer>>
   rectangle bikeCounts <<topic>>
   rectangle bikeCountUpdates <<topic>>
   rectangle countUpdatesProjected<<topic>>
   rectangle zoneToStations<<table>>
   rectangle stationNearbyCounts <<topic>>
   rectangle hourlyStationNearbyTraffic <<topic>>
   database station_daily_nearby_traffic <<database>>
}


bikeCountsClient --> bikeCounts 
bikeCounts --> bikeCountUpdates : deduplicated
stationUpdates --> zoneToStations
bikeCountUpdates --> countUpdatesProjected: projected on nearby zones
zoneToStations--> stationNearbyCounts 
countUpdatesProjected --> stationNearbyCounts 
stationNearbyCounts --> hourlyStationNearbyTraffic : windowed
hourlyStationNearbyTraffic --> station_daily_nearby_traffic

skinparam rectangle{
    backgroundColor<<topic>> Gainsboro
    backgroundColor<<table>> Gainsboro
    backgroundColor<<producer>> Coral
    backgroundColor<<consumer>> Coral
    borderColor<<topic>> transparent
    borderColor<<table>> transparent
    borderColor<<producer>> transparent
    borderColor<<consumer>> transparent
}

skinparam database{ 
   backgroundColor<<database>> Coral
   borderColor transparent
}

skinparam{
   ArrowColor DeepSkyBlue
   ArrowFontColor Coral
   shadowing false
}
@enduml