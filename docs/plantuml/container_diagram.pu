@startuml container diagram
!include https://raw.githubusercontent.com/adrianvlupu/C4-PlantUML/latest/C4_Container.puml
!define SPRITESURL https://raw.githubusercontent.com/rabelenda/cicon-plantuml-sprites/v1.0/sprites
!includeurl SPRITESURL/tomcat.puml
!includeurl SPRITESURL/kafka.puml
!includeurl SPRITESURL/java.puml
!includeurl SPRITESURL/desktop.puml

skinparam TitleFontSize 30
LAYOUT_WITH_LEGEND()

title
<b>Container diagram</b>
(based on C4 model)
end title

Person(user, User, "Someone wanting to get the updated Velib's stations status")

  
System_Boundary(c1, "Velib Station Status") {
    Container(htmlApplication, "HTML Application", "Javascript, HTML, OpenLayers", "<$desktop>\n Display a map with each station status and the user's location")
    Container(webApplication, "Web Application", "SpringBoot, Thymeleaf, embedded Tomcat", "<$tomcat>\n Generate and deliver the main page with the current stations status")
    Container(producerApplication, "Producer Application", "Java, Unirest, Kafka", "<$java>\n Fetch stations data from Paris' API and push them to Kafka")
    Container(streamingApplication, "Streaming Application", "Java, Kafka Streaming", "<$java>\n Combine and process Paris's data to detect unavailable/anomalous stations") 
    ContainerDb(kafkaCluster, "Kafka Cluster", "Kafka, Schema Registry", "<$kafka>")
}
System_Ext(parisAPI, "Paris OpenData API", "Expose stations and counters data")
System_Ext(openLayers, "OpenLayers", "Provide OpenStreetMap data")

Rel(user, webApplication, "1.Connect to web address", "HTTP")
Rel(user, htmlApplication, "2.View stations status", "HTTP")

Rel(webApplication, htmlApplication, "Delivers generated page", "HTTP")
Rel(htmlApplication, openLayers, "Get the map backgrounds", "HTTP")

Rel_Neighbor(webApplication, kafkaCluster, "Consume the processed stations status")
Rel(producerApplication, kafkaCluster, "Push the stations and traffic data")
Rel(streamingApplication, kafkaCluster, "Process the stations data to detect anomalies and the traffic data to compute each station nearby traffic")
Rel(producerApplication, parisAPI, "Get the stations and traffic data", "REST")
@enduml